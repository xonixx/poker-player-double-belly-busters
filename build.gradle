apply plugin: 'java'
apply plugin: 'war'
apply plugin: 'tomcat'
//apply plugin: 'spring-boot'

sourceCompatibility = 1.7
version = '1.0'

repositories {
    mavenCentral()
}

def final HTTP_PORT = System.getenv('PORT') ? System.getenv('PORT').toInteger() : 8080

// change this by n*100 to offset the ports of the tomcat server
// don't forget to change the port accordingly in config.yml too!
def portOffset = 0

tomcatRun {
	httpPort = HTTP_PORT + portOffset
	ajpPort = 8009 + portOffset
	stopPort = 8081 + portOffset
    contextPath = '/'
}

tomcatStop {
    stopPort = 8081 + portOffset
    stopKey = 'stopKey'
}

buildscript {
    repositories {
        jcenter()
//        maven.url "http://repo.spring.io/snapshot"
//        maven.url "http://repo.spring.io/milestone"
    }

    dependencies {
        classpath 'org.gradle.api.plugins:gradle-tomcat-plugin:1.0'
//        classpath("org.springframework.boot:spring-boot-gradle-plugin:1.3.6.RELEASE")
    }
}

dependencies {
    testCompile 'junit:junit:4.11'
    compile 'com.google.code.gson:gson:2.7'
//    compile 'org.springframework.boot:spring-boot-starter-security:1.3.6.RELEASE'
//    compile 'org.springframework.boot:spring-boot-starter-web:1.3.6.RELEASE'
//    compile 'org.springframework.boot:spring-boot-starter-ws:1.3.6.RELEASE'
    compile group: 'log4j', name: 'log4j', version: '1.2.17'
    compile group: 'org.mockito', name: 'mockito-all', version: '1.8.4'

    def tomcatVersion = '7.0.11'

    providedCompile "org.apache.tomcat:tomcat-servlet-api:${tomcatVersion}"

    tomcat "org.apache.tomcat.embed:tomcat-embed-core:${tomcatVersion}",
            "org.apache.tomcat.embed:tomcat-embed-logging-juli:${tomcatVersion}"
    tomcat("org.apache.tomcat.embed:tomcat-embed-jasper:${tomcatVersion}") {
        exclude group: 'org.eclipse.jdt.core.compiler', module: 'ecj'
    }
}

task stage(dependsOn: [assemble])
